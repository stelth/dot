#!/usr/bin/env sh

# global settings
yabai -m config mouse_follows_focus off
yabai -m config focus_follows_mouse off
yabai -m config window_placement second_child
yabai -m config window_topmost on
yabai -m config window_shadow on
yabai -m config window_opacity off
yabai -m config window_opacity_duration 0.0
yabai -m config active_window_opacity 1.0
yabai -m config normal_window_opacity 0.95
yabai -m config window_border off
yabai -m config window_border_width 6
yabai -m config active_window_border_color 0xff775759
yabai -m config normal_window_border_color 0xff555555
yabai -m config insert_feedback_color 0xaad75f5f
yabai -m config split_ratio 0.50
yabai -m config auto_balance off
yabai -m config mouse_modifier fn
yabai -m config mouse_action1 move
yabai -m config mouse_action2 resize
# yabai -m config external_bar all:26:0

# general space settings
gap=10
yabai -m config layout bsp
yabai -m config top_padding $gap
yabai -m config bottom_padding $gap
yabai -m config left_padding 5
yabai -m config right_padding $gap
yabai -m config window_gap 20

# specific space settings
# yabai -m config --space 2 layout             stack
yabai -m config --space 6 layout float

# window rules
yabai -m rule --add app="^Notes$" space=4
yabai -m rule --add app="^Spotify$" space=6
yabai -m rule --add app="^Steam$" space=6
yabai -m rule --add app="^(Docker|System Preferences|Alfred|Activity Monitor|Installer)" manage=off
yabai -m rule --add app="^(Blizzard|Battle|Wow)" space=6
yabai -m rule --add title="^scratchpad$" manage=off grid=4:4:1:1:2:2

# # Refresh spaces widget on space change
# yabai -m signal --add event=space_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# # Refresh spaces widget on display focus change
# yabai -m signal --add event=display_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# # Refresh spaces widget on window resize
# yabai -m signal --add event=window_resized action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# # Refresh process widget on space change
# yabai -m signal --add event=space_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"

# # Refresh process widget on when focused application changes
# yabai -m signal --add event=window_focused action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# # Refresh spaces widget on when focused application changes
# yabai -m signal --add event=window_focused action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# # Refresh process widget on when focused application changes
# yabai -m signal --add event=application_front_switched action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# # Refresh spaces widget on when focused application changes
# yabai -m signal --add event=application_front_switched action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# # Refresh process widget on when an application window is closed
# yabai -m signal --add event=window_destroyed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# # Refresh spaces widget on when an application window is closed
# yabai -m signal --add event=window_destroyed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# # Refresh process widget when current window title changes
# yabai -m signal --add event=window_title_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"

echo "yabai configuration loaded.."
